<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>155, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD8
        CQAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCBQAAXYBawEKAVMBCgFTAQoBUwEKAVMBCgFTAQoBUwEKAVMBCgFTATABXw4A
        AXABAQFwAQEBcAEBAXABAQFwAQEBcAEBAXABAQFwAQEBcAEBAf8Bfw4AAZUBJgF1AQIBdQECCAAB/wF/
        AXUBAgF1AQIBdQECJgABlwFrAQoBUwEKAVMBCgFTAQoBUwEKAVMBCgFTAQoBUwEKAVMBCgFTAQoBUwwA
        AXABAQFwAQEBcAEBAXABAQFwAQEBcAEBAXABAQFwAQEBcAEBAXABAQG9AXMMAAGvAQEBdQECAXUBAggA
        AXUBAgF1AQIBdQECAXUBAiYAAZkBbwEKAVMBCgFTAcUBLQHGATEBxgExAeYBMQEnAToBCgFTAQoBUwEK
        AVMB/wF/CgABcAEBAXABAQFwAQEBcAEBAXABAQFwAQEBcAEBAXABAQFwAQEBcAEBAXABAQH5AU4IAAFb
        AWMBrgEBAXUBAgF1AQIGAAESAR4BdQECAXUBAgF1AQIBdQECJgABmQFzAQoBUwEKAVMBxQEtAcUBLQHG
        ATEBxgExAeYBMQEHATYBCgFTAQoBUwEKAVMKAAFwAQEBcAEBAXABAQH1AQEBFgECARcBAgE4AQIBWAEC
        AVkBAgF6AQIBegECAXoBAgH/AXsGAAGuAQEBrgEBAXUBAgF1AQIGAAFUAQIBdQECAXUBAgF1AQIBdQEC
        JgABuwFzAQoBUwEKAVMBxQEtAcUBLQHFAS0BxgExAcYBMQHmATEBCgFTAQoBUwEKAVMBFAFfCAABcAEB
        AXABAQFwAQEBegECAXoBAgF6AQIBegECAXoBAgF6AQIBegECAXoBAgF6AQIB/wF/BgABrgEBAa4BAQF1
        AQIBdQECBAABrgEBAXUBAgF1AQIBrgEBAXUBAgF1AQImAAG8AXcBCgFTAQoBUwHFAS0BxQEtAcUBLQHF
        AS0BxgExAcYBMQEKAVMBCgFTAQoBUwHmATEIAAFwAQEBcAEBAXABAQF6AQIBegECAXoBAgF6AQIBegEC
        AVkBAgHbASoBGwE7ATwBSwgAAa4BAQGuAQEBdQECAXUBAgG9AW8CAAEyAQIBdQECAXUBAgGuAQEBdQEC
        AXUBAiYAAdwBdwEKAVMBCgFTAcUBLQHFAS0BxQEtAcUBLQQAAQoBUwEKAVMBCgFTAeYBMQHnATUGAAFw
        AQEBcAEBAXABAQF6AQIBegECARYBAgFwAQEBcAEBAXABAQEUASYMAAGuAQEBrgEBAXUBAgF1AQIBOQFD
        Aa4BBQF1AQIBdQECAa4BAQGuAQEBdQECAXUBAgHeAXskAAHdAXsBCgFTAQoBUwHFAS0BxQEtAcUBLQHF
        AS0EAAEKAVMBCgFTAQoBUwHmATEB5gExBgABcAEBAXABAQFwAQEBegECAXoBAgH1AQEBcAEBAXABAQFw
        AQEBcAEBAZwBawoAAa4BAQGuAQEBdQECAXUBAgF1AQIB8AEBAXUBAgF1AQIBrgEBAa4BAQF1AQIBdQEC
        AVsBUyQAAd4BewEKAVMBCgFTAeYBMQHFAS0BxQEtAcUBLQQAAQoBUwEKAVMBCgFTAeYBMQHmATEGAAFw
        AQEBcAEBAXABAQF6AQIBegECAfUBAQFwAQEBcAEBAXABAQFwAQEBcAEBAf8BfwgAAa4BAQGuAQEBdQEC
        AXUBAgF1AQIBdQECAXUBAgHPAQEBrgEBAa4BAQF1AQIBdQECAZYBDiQAAf4BewEKAVMBCgFTAeYBMQHF
        AS0BxQEtAcUBLQQAAQoBUwEKAVMBCgFTAeYBMQHmATEGAAFwAQEBcAEBAXABAQF6AQIBegECAXoBAgF6
        AQIBegECAXoBAgF6AQIBegECAd4BdwgAAa4BAQGuAQEBdQECAXUBAgF1AQIBdQECAXUBAgHwARUBrgEB
        Aa4BAQF1AQIBdQECAXUBAiQAAf8BfwEKAVMBCgFTAQYBNgHFAS0BxQEtAcUBLQIAAQoBUwEKAVMBCgFT
        AQoBUwHmATEB5gExBgABfAFnAXABAQFwAQEBegECAXoBAgF6AQIBegECAXoBAgF6AQIBegECAXoBAgH/
        AX8IAAGuAQEBrgEBAVQBAgF1AQIBdQECAXUBAgF7AVsBOQFXAa4BAQGuAQEBdQECAXUBAgF1AQIkAAH/
        AX8BCgFTAQoBUwEKAVMBCgFTAQoBUwEKAVMBCgFTAQoBUwEKAVMBCgFTAeYBMQHmATEB5gExCAABcAEB
        AXABAQF6AQIBegECAdMBAQFwAQEBcAEBAXABAQFwAQEBtwFCCgABdAEyAa4BAQERAQIBdQECAXUBAgF1
        AQICAAHeAXsBrgEBAa4BAQFUAQIBdQECAXUBAiYAAQoBUwEKAVMBCgFTAQoBUwEKAVMBCgFTAQoBUwEK
        AVMBCgFTAeYBMQHmATEB5gExAeYBMQgAAbcBPgFwAQEBegECAXoBAgGzAQEBcAEBAXABAQFwAQEBcAEB
        AXABAQH/AX8IAAF7AWcBrgEBAa8BAQF1AQIBdQECAdcBIgQAAa4BAQGuAQEBrwEBAa4BAQHPAQkmAAEK
        AVMBCgFTAQoBUwEKAVMBCgFTAckBTgGIAUIB5gExAeYBMQHmATEB5gExAeYBMQH/AX8KAAFwAQEBegEC
        AXoBAgE4AQIBWQECAXoBAgF6AQIBegECAXoBAgF6AQIIAAH/AX8BrgEBAa4BAQGuAQEBrgEBBgABrgEB
        Aa4BAQGuAQEBMgEeKgAB5gExAcYBLQHGAS0BxgEtAcYBLQHGAS0B5gExAeYBMQHmATEB5gExAZsBcwwA
        AbEBEQF6AQIBegECAXoBAgF6AQIBegECAXoBAgF6AQIBegECAXoBAgoAAa4BAQGuAQEBrgEBCAABrgEB
        Aa4BAQG1ATowAAFLAUIBrwFOAfMBWgE3AWMBegFvAbwBdxQAAZoBEgH7AS4BPAFHAX0BWwG9AWsB3gF3
        Af8Bfw4AAXQBLgFaAV82AAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQABgAEf
        AcABDwHjAcMCAAGAAQ8BwAEHAeMBwwIAAYABBwHAAQMBwwGDAgABgAEHAcABAQHDAYMCAAGAAQMBwAEB
        AcMBAwIAAYABAwHAAQMBwQEDAgABgAHBAcABDwHAAQECAAGAAcEBwAEHAcABAQIAAYABwQHAAQMBwAEB
        AgABgAHBAcABAwHAAQECAAGAAYEBwAEDAcABAQIAAYABAQHgAQcBwAGBAgABwAEBAeABAwHAAcECAAHA
        AQEB8AEDAcEBwwIAAeABAwHwAQMB4wHHAgAB+AEfAfgBDwHnAf8CAAs=
</value>
  </data>
</root>